# Generated by Django 3.0.2 on 2020-03-02 09:03

import Employer.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Home', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.CharField(blank=True, max_length=50, null=True)),
                ('company_register_number', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('company_email', models.EmailField(max_length=30)),
                ('company_phone', models.CharField(max_length=10)),
                ('company_fax_number', models.CharField(max_length=20)),
                ('company_category', models.CharField(max_length=50)),
                ('company_total_emp_no', models.IntegerField()),
                ('company_total_dept', models.IntegerField()),
                ('company_desc', models.TextField()),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to=Employer.models.upload_image_path)),
                ('company_street_name', models.CharField(max_length=50)),
                ('company_country', models.CharField(default='India', editable=False, max_length=10)),
                ('company_pincode', models.IntegerField()),
                ('company_website', models.URLField(blank=True, null=True)),
                ('company_city', models.ManyToManyField(to='Home.City')),
            ],
        ),
        migrations.CreateModel(
            name='Company_service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Designation_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job_upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=30)),
                ('job_description', models.TextField(blank=True, null=True)),
                ('job_salary', models.DecimalField(decimal_places=2, max_digits=8)),
                ('job_street_name', models.CharField(max_length=50)),
                ('job_country', models.CharField(default='India', editable=False, max_length=10)),
                ('job_qualification', models.CharField(max_length=30)),
                ('job_quentity', models.IntegerField()),
                ('job_upload_date', models.DateTimeField(auto_now_add=True)),
                ('job_deadline', models.DateField()),
                ('job_bond_time', models.IntegerField()),
                ('job_bond_documents', models.TextField(max_length=40)),
                ('comapny_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Employer.Company')),
                ('job_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Home.City')),
                ('job_states', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Home.States')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('emp_last_name', models.CharField(max_length=40)),
                ('emp_email', models.EmailField(max_length=30)),
                ('emp_phone', models.CharField(max_length=10)),
                ('emp_password', models.CharField(blank=True, max_length=50, null=True)),
                ('emp_bio', models.TextField(blank=True, null=True)),
                ('emp_birthdate', models.DateField(blank=True, null=True)),
                ('emp_gender', models.CharField(choices=[('m', 'Male'), ('f', 'Female'), ('o', 'Other')], max_length=1)),
                ('emp_id_card', models.ImageField(blank=True, null=True, upload_to=Employer.models.upload_image_path)),
                ('emp_experience', models.DecimalField(decimal_places=2, max_digits=4)),
                ('emp_street_name', models.CharField(max_length=50)),
                ('emp_country', models.CharField(default='India', editable=False, max_length=10)),
                ('emp_pincode', models.IntegerField()),
                ('is_super_emp', models.BooleanField(default=0)),
                ('emp_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Home.City')),
                ('emp_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Employer.Company')),
                ('emp_dept', models.ManyToManyField(to='Employer.Dept')),
                ('emp_designation', models.ManyToManyField(to='Employer.Designation')),
                ('emp_states', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Home.States')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='company_services',
            field=models.ManyToManyField(to='Employer.Company_service'),
        ),
        migrations.AddField(
            model_name='company',
            name='company_states',
            field=models.ManyToManyField(to='Home.States'),
        ),
    ]
